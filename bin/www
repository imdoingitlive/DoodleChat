#!/usr/bin/env node

// Express can launch a www executable to handle certain tasks.
// www goes in bin (sometimes .bin to keep it hidden)

// This way, we can set certain properties here
// rather than having them take up space in server.js.
var debug = require('debug')('server');

// we bring in the app we exported from server.js
var app = require('../server');

// we bring in the models we exported with index.js
var models = require('../models');

// socket io
var server = require('http').Server(app);
var io = require('socket.io')(server);
var socketio = require('../controllers/socketio');
io.on('connection', socketio.connection);

// we set the port of the app
app.set('port', process.env.PORT || 3000);

// we sync the models with our db 
// (thus creating the apropos tables)
models.sequelize.sync({force: true}).then(function() {
	// set our app to listen to the port we set above
  server.listen(app.get('port'), function() {
  	// then save a log of the listening to our debugger.
    debug('Express server listening on port ' + server.address().port);
  });

  // Controller object to set up the database on the server.
  // For now, just create a story and it's pages
  // var controller = require('../controllers/controller');
  // controller.createStories();
});
